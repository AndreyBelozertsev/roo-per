imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@PortalUserBundle/Resources/config/services.yml" }
    - { resource: "@PortalHelperBundle/Resources/config/services.yml" }
    - { resource: "@PortalContentBundle/Resources/config/services.yml" }
    - { resource: "@PortalAdminBundle/Resources/config/services.yml" }
    - { resource: "@PortalProfileBundle/Resources/config/services.yml" }
    - { resource: "@PortalEsiaBundle/Resources/config/services.yml" }
#    - { resource: migrations_main.yml }
#    - { resource: migrations_content.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru
    available_lang: ru|ua|ct|en|

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
#    validation:      { enable_annotations: true }
    validation:      { enabled: true, enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
#    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    assets:
        base_urls:
            - '%protocol%://%site_name%'

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

#doctrine_migrations:
#    dir_name: "%kernel.root_dir%/DoctrineMigrations"
#    namespace: Application\Migrations
#    table_name: migration_versions
#    name: Application Migrations
#    organize_migrations: false

#doctrine_migrations:
#    default:
#        dir_name: "%kernel.project_dir%/app/DoctrineMigrations"
#        namespace: Application\Migrations

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                mapping_types:
                    enum: string
                    department_type: string
                    attachment_type: string
                    petition_type: string
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
                keep_slave: true
                slaves:
                    # a collection of named slave connections (e.g. slave1, slave2)
                    slave:
                        host: "%slave_database_host%"
                        port: "%slave_database_port%"
                        dbname: "%slave_database_name%"
                        user: "%slave_database_user%"
                        password: "%slave_database_password%"
                    slave2:
                        host: "%slave_2_database_host%"
                        port: "%slave_2_database_port%"
                        dbname: "%slave_2_database_name%"
                        user: "%slave_2_database_user%"
                        password: "%slave_2_database_password%"
            customer:
                driver:   "%database_driver%"
                host:     "%database_host2%"
                port:     "%database_port2%"
                dbname:   "%database_name2%"
                user:     "%database_user2%"
                password: "%database_password2%"
                charset:  UTF8


    orm:
        default_entity_manager: default
        entity_managers:
            default:
                connection: default
                mappings:
                    PortalAdminBundle:  ~
                    PortalContentBundle: ~
                    PortalHelperBundle: ~
                    PortalUserBundle: ~
                    PortalProfileBundle: ~
            customer:
                connection: customer
                mappings:
                    PortalAdminBundle:  ~
                    PortalContentBundle: ~
                    PortalHelperBundle: ~
                    PortalUserBundle: ~
                    PortalProfileBundle: ~

        auto_generate_proxy_classes: "%kernel.debug%"
#        naming_strategy: doctrine.orm.naming_strategy.underscore
#        auto_mapping: false

# Doctrine Migrations
doctrine_migrations:
    dir_name: "%migration_dir%"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false

# Swiftmailer Configuration
swiftmailer:
    transport:  "%mailer_transport%"
    host:       "%mailer_host%"
    username:   "%mailer_user%"
    password:   "%mailer_password%"
    auth_mode:  "%mailer_auth_mode%"
    port:       "%mailer_port%"
    encryption: "%mailer_encryption%"
    spool:     { type: memory }

# FOS User
fos_user:
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    db_driver:      orm
    firewall_name:  main
    user_class:     Portal\UserBundle\Entity\User
    registration:
        form:
            type: Portal\UserBundle\Form\RegistrationType
    profile:
        form:
            type: Portal\UserBundle\Form\ProfileType

##Sonata
#sonata_block:
#    default_contexts: [cms]
#    blocks:
#        # enable the SonataAdminBundle block
#        sonata.admin.block.admin_list:
#            contexts: [admin]
#
#sonata_admin:
#    title: The government of the Republic of Crimea
#    templates:
#        layout: PortalAdminBundle::layout.html.twig
#       # knp_menu_template:    'PortalAdminBundle:Menu:left_menu.html.twig'

knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
    twig:
        template: KnpMenuBundle::menu.html.twig
    #  if true, enables the helper for PHP templates
    templating: false
    # the renderer to use, list is also available by default
    default_renderer: twig

#Genemu
genemu_form:
    date: ~

#Vich Uploader
vich_uploader:
    db_driver: orm
    mappings:
        attachment_mapping:
            uri_prefix:         /uploads/%instance_code%/attachments
            upload_destination: "%kernel.root_dir%/../web/uploads/%instance_code%/attachments"
            namer:              vich_uploader.attachment_namer_origname
            directory_namer:    vich_uploader.directory_namer
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        article_preview_attachment_mapping:
            uri_prefix:         /uploads/%instance_code%/attachments/articles
            upload_destination: "%kernel.root_dir%/../web/uploads/%instance_code%/attachments/articles"
            namer:              vich_uploader.attachment_namer_origname
            directory_namer:    vich_uploader.directory_namer
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        head_preview_attachment_mapping:
            uri_prefix:         /uploads/%instance_code%/attachments/heads
            upload_destination: "%kernel.root_dir%/../web/uploads/%instance_code%/attachments/heads"
            namer:              vich_uploader.attachment_namer_origname
            directory_namer:    vich_uploader.directory_namer
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
        photo_report_attachment_mapping:
            uri_prefix:         /uploads/%instance_code%/attachments/photo-reports
            upload_destination: "%kernel.root_dir%/../web/uploads/%instance_code%/attachments/photo-reports"
            namer:              vich_uploader.attachment_namer_origname
            directory_namer:    vich_uploader.directory_namer
            inject_on_load:     true
            delete_on_remove:   true
            delete_on_update:   true
        feedback_form_attachment_mapping:
            uri_prefix:         /uploads/%instance_code%/attachments/feedbacks
            upload_destination: "%kernel.root_dir%/../web/uploads/%instance_code%/attachments/feedbacks"
            namer:              vich_uploader.attachment_namer_origname
            directory_namer:    vich_uploader.directory_namer
            inject_on_load:     true
            delete_on_remove:   true
            delete_on_update:   true
        document_attachment_mapping:
            uri_prefix:         /uploads/%instance_code%/attachments/documents
            upload_destination: "%kernel.root_dir%/../web/uploads/%instance_code%/attachments/documents"
            namer:              vich_uploader.attachment_namer_origname
            directory_namer:    vich_uploader.directory_namer
            inject_on_load:     true
            delete_on_remove:   true
            delete_on_update:   true
        profile_petition_attachment_mapping:
            uri_prefix:         /uploads/profile/attachments/petition
            upload_destination: "%kernel.root_dir%/../web/uploads/profile/attachments/petition"
            namer:              vich_uploader.namer_uniqid
            inject_on_load:     false
            delete_on_remove:   true
            delete_on_update:   true
        profile_petition_state_attachment_mapping:
            uri_prefix:         /uploads/profile/attachments/state
            upload_destination: "%kernel.root_dir%/../web/uploads/profile/attachments/state"
            namer:              vich_uploader.namer_uniqid
            inject_on_load:     false
            delete_on_remove:   true
            delete_on_update:   true

bazinga_js_translation:
    locale_fallback:      ru
    default_domain:       messages

stof_doctrine_extensions:
    orm:
        default:
            timestampable: true
            sluggable : true
        customer:
            timestampable: true
            sluggable : true

#httplug:
#    clients:
#        default:
#            factory: 'httplug.factory.curl'
#        hwi_special:
#            factory: 'httplug.factory.guzzle6'
#            config: # You pass here the Guzzle configuration, exactly like before.
#                timeout: 20
#                verify_peer: false
#                max_redirects: 10
#                ignore_errors: false

hwi_oauth:
    http:
        client: guzzle_client.hwi_special

    # configuration of oauth resource owners to use
    resource_owners:
        esia:
            type:                oauth2
            class:               Portal\EsiaBundle\OAuth\ResourceOwner\EsiaResourceOwner
            client_id:           '%esia_client_id%'
            client_secret:       '%esia_client_secret%'
            access_token_url:    '%esia_access_token_url%'
            authorization_url:   '%esia_authorization_url%'
            infos_url:           '%esia_infos_url%'
            scope:               'fullname mobile contacts birthdate gender email'
            user_response_class: Portal\EsiaBundle\OAuth\Response\EsiaUserResponse
            options:
                esia_public_certificate_file: '%esia_public_certificate_file%'
                esia_private_certificate_file: '%esia_private_certificate_file%'
                esia_key_pass_phrase: '%esia_key_pass_phrase%'
                esia_signature_dir: '%esia_signature_dir%'

    # list of firewall names the oauth bundle is active in
    firewall_names: [profile]

    # optional FOSUserBundle integration
    fosub:
        # try 30 times to check if a username is available (foo, foo1, foo2 etc)
        username_iterations: 30

        # mapping between resource owners (see below) and properties
        properties:
            esia: esiaIid

    # if you want to use 'connect' and do not use the FOSUB integration, configure these separately
    connect:
        account_connector: esia.custom.user_provider
