<?php

namespace Portal\ContentBundle\Repository;

/**
 * TagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagRepository extends \Doctrine\ORM\EntityRepository
{
    public function getTagsByIds($tagIds)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('tag')
            ->from($this->getEntityName(), 'tag')
            ->where('tag.id IN (:tagIds)')
            ->setParameter('tagIds', explode(',', $tagIds));

        return $qb->getQuery()->getResult();
    }

    public function getTagsByArticleId($id)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT id, tag
                FROM tag AS t
                JOIN article_to_tag AS att ON t.id = att.tag_id
                WHERE att.article_id = ' . (int)$id
        ;

        return $dc->fetchAll($sql) ?: [];
    }

    public function getTagsByDocumentId($id)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT id, tag
                FROM document_tag AS t
                JOIN document_to_tag AS dtt ON t.id = dtt.document_tag_id
                WHERE dtt.document_id = ' . (int)$id
        ;

        return $dc->fetchAll($sql) ?: [];
    }

    public function getTagsByEventId($id)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT id, tag
                FROM tag AS t
                JOIN event_to_tag AS ett ON t.id = ett.tag_id
                WHERE ett.event_id = ' . (int)$id
        ;

        return $dc->fetchAll($sql) ?: [];
    }

    public function getTagsByPhotoReportId($id)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT id, tag
                FROM tag AS t
                JOIN photo_report_to_tag AS prtt ON t.id = prtt.tag_id
                WHERE prtt.photo_report_id = ' . (int)$id
        ;

        return $dc->fetchAll($sql) ?: [];
    }

    public function getTagsByVideoReportId($id)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT id, tag
                FROM tag AS t
                JOIN video_report_to_tag AS vrtt ON t.id = vrtt.tag_id
                WHERE vrtt.video_report_id = ' . (int)$id
        ;

        return $dc->fetchAll($sql) ?: [];
    }

    public function getAllDocumentsTags()
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT t.id, t.tag
                FROM document_tag AS t
                LEFT JOIN document_to_tag AS dtt ON dtt.document_tag_id = t.id'
        ;

        return $dc->fetchAll($sql) ?: [];
    }
}
