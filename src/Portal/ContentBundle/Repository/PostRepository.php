<?php

namespace Portal\ContentBundle\Repository;

use Doctrine\DBAL\DBALException;
use Portal\ContentBundle\Entity\Post;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param int $page
     * @return array
     */
    public function getPaginatedList(int $page)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT p.id, attachment.preview_file_url,
                    p.title_uk,  p.title_ru, p.title_en,
                    p.content_uk, p.content_ru, p.content_en,
                    p.user_name_uk, p.user_name_ru, p.user_name_en,
                    p.user_position_uk, p.user_position_ru, p.user_position_en
                FROM post AS p
                INNER JOIN post_attachment p_a ON p_a.post_id = p.id
                INNER JOIN attachment ON attachment.id = p_a.id
                WHERE p.is_deleted IS FALSE AND p.is_published IS TRUE
                ORDER BY p.created_at DESC
                LIMIT ' . Post::PAGE_PAGINATION_LIMIT . '
                OFFSET ' . (int)$page * Post::PAGE_PAGINATION_LIMIT . '
        ';

        return $dc->fetchAll($sql) ?: [];
    }

    /**
     * @return int|mixed
     */
    public function getPostCount()
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT count(*)
                FROM post AS p
                WHERE p.is_deleted IS FALSE AND p.is_published IS TRUE
        ';
        try {
            $count = $dc->executeQuery($sql)->fetch(\PDO::FETCH_COLUMN);
        } catch (DBALException $e) {
        }

        return $count ?? false;
    }
}
