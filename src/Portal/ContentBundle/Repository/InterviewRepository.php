<?php

namespace Portal\ContentBundle\Repository;

/**
 * QuizRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InterviewRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllInterview($filterParam)
    {
        $dc = $this->getEntityManager()->getConnection();

        $params = [];
        if (isset($filterParam['filterTitle']) && $filterParam['filterTitle'] !== '') {
            $params[] = 'LOWER(i.title) LIKE \'%' . trim(mb_strtolower($filterParam['filterTitle'], 'UTF-8')) . '%\'';
        }
        if (isset($filterParam['filterDateStartFrom']) && $filterParam['filterDateStartFrom'] !== '') {
            $params[] = 'i.date_start >= \'' . date('d.m.Y', strtotime($filterParam['filterDateStartFrom'])) . '\'';
        }
        if (isset($filterParam['filterDateStartTo']) && $filterParam['filterDateStartTo'] !== '') {
            $params[] = 'i.date_start <= \'' . date('d.m.Y', strtotime($filterParam['filterDateStartTo'] . '+1 day')) . '\'';
        }
        if (isset($filterParam['filterDateEndFrom']) && $filterParam['filterDateEndFrom'] !== '') {
            $params[] = 'i.date_end >= \'' . date('d.m.Y', strtotime($filterParam['filterDateEndFrom'])) . '\'';
        }
        if (isset($filterParam['filterDateEndTo']) && $filterParam['filterDateEndTo'] !== '') {
            $params[] = 'i.date_end <= \'' . date('d.m.Y', strtotime($filterParam['filterDateEndTo'] . '+1 day')) . '\'';
        }
        $published = (isset($filterParam['filterPublished']) && $filterParam['filterPublished'] === 'true');
        $notPublished = (isset($filterParam['filterNotPublished']) && $filterParam['filterNotPublished'] === 'true');
        $isDeleted = (isset($filterParam['filterIsDeleted']) && $filterParam['filterIsDeleted'] === 'true');
        if ($published xor $notPublished) {
            $params[] = 'i.is_published IS ' . ($published ? 'true' : 'false');
        }
        if ($isDeleted === true) {
            $params[] = 'i.is_deleted IS true ';
        } else {
            $params[] = ' (i.is_deleted IS false OR i.is_deleted IS NULL) ';
        }

        $where = (count($params) !== 0) ? ' WHERE ' . implode(' AND ', $params) : '';

        $sql = 'SELECT
                  i.id as interview_id, i.title as interview_title,
                  i.date_start as interview_date_start,
                  i.date_end as interview_date_end,
                  i.is_published as interview_is_published,
                  i.is_deleted, i.author_id, i.slug
                FROM interview AS i' .
                $where . '
                ORDER BY i.date_start DESC'
        ;

        return $dc->executeQuery($sql)->fetchAll() ?: [];
    }
}
