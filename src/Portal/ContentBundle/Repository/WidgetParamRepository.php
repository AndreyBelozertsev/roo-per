<?php

namespace Portal\ContentBundle\Repository;

/**
 * WidgetParamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WidgetParamRepository extends \Doctrine\ORM\EntityRepository
{
    public function getNotEmptyParamsByNamesAndId(array $paramNames, $id)
    {
        $dc = $this->getEntityManager()->getConnection();

        foreach ($paramNames as &$v) {
            $dc->quote($v, \PDO::PARAM_STR);
        }
        $sql = 'SELECT w.id, w.param_name, w.param_value, w.param_title'
            . ' FROM widget_param AS w'
            . ' WHERE (w.param_name LIKE \''. implode('\' OR w.param_name LIKE \'', $paramNames). '\')'
            . ' AND widget2panel_id = ' . $dc->quote((int)$id, \PDO::PARAM_INT)
            . " AND w.param_value <> '' AND w.param_value IS NOT NULL"    
            . ' ORDER BY w.param_name'
        ;
        $result = $dc->executeQuery($sql)->fetchAll();

        return $result ?: [];
    }
    
    public function getParamsByNamesAndId(array $paramNames, $id)
    {
        $dc = $this->getEntityManager()->getConnection();

        foreach ($paramNames as &$v) {
            $dc->quote($v, \PDO::PARAM_STR);
        }
        $sql = 'SELECT w.id, w.param_name, w.param_value, w.param_title'
            . ' FROM widget_param AS w'
            . ' WHERE (w.param_name LIKE \''. implode('\' OR w.param_name LIKE \'', $paramNames). '\')'
            . ' AND widget2panel_id = ' . $dc->quote((int)$id, \PDO::PARAM_INT)
            . ' ORDER BY w.param_name'
        ;
        $result = $dc->executeQuery($sql)->fetchAll();

        return $result ?: [];
    }

    public function getParamByName($paramName)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT w.param_value'
            . ' FROM widget_param AS w'
            . ' WHERE w.param_name LIKE' . $dc->quote($paramName, \PDO::PARAM_STR)
        ;
        $result = $dc->executeQuery($sql)->fetchColumn();

        return $result ?: '';
    }
    
    public function getParamByNameAndId($paramName, $id)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT w.param_value'
            . ' FROM widget_param AS w'
            . ' WHERE w.param_name LIKE' . $dc->quote($paramName, \PDO::PARAM_STR) . ' '
            . ' AND w.widget2panel_id = ' . $id
        ;
        $result = $dc->executeQuery($sql)->fetchColumn();

        return $result ?: '';
    }
}
