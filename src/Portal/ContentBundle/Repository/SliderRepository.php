<?php

namespace Portal\ContentBundle\Repository;

/**
 * SliderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SliderRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param string $slug
     *
     * @return array
     */
    public function getSliderByCode($slug)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT s.title AS slider_title, s.slug AS slider_slug, s.slide_duration, b.title AS banner_title, b.slug,
                    b.ref, b.created_at, att.original_file_name AS filename, att.type AS attachment_type,
                    att.preview_file_url AS attachment_path, b.open_in_a_new_tab AS open_in_a_new_tab
                FROM slider AS s
                    INNER JOIN slider_to_banner AS s2b ON s.id = s2b.slider
                    INNER JOIN banner AS b ON b.id = s2b.banner
                    INNER JOIN attachment AS att ON att.id = b.id
                WHERE s.is_published = TRUE
                    AND b.is_published = TRUE
                    AND s.slug LIKE ' . $dc->quote($slug, \PDO::PARAM_STR) . ' 
                ORDER BY s2b.sort_order'
        ;
        if ($slug == 'informbloksbig') {
            $sql .= ' LIMIT 17';
        }

        return $dc->fetchAll($sql) ?: [];
    }

    /**
     * @param integer $id
     *
     * @return array
     */
    public function getSliderBannersById($id)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT s.title AS slider_title, s.slug AS slider_slug, s.slide_duration, b.title AS banner_title, b.slug,
                    b.ref, b.created_at, att.original_file_name AS filename, att.type AS attachment_type,
                    att.preview_file_url AS attachment_path, b.open_in_a_new_tab AS open_in_a_new_tab
                FROM slider AS s
                    INNER JOIN slider_to_banner AS s2b ON s.id = s2b.slider
                    INNER JOIN banner AS b ON b.id = s2b.banner
                    INNER JOIN attachment AS att ON att.id = b.id
                WHERE s.id = ' . (int)$id . '
                    AND s.is_published = TRUE
                    AND b.is_published = TRUE
                ORDER BY s2b.sort_order'
        ;

        return $dc->fetchAll($sql) ?: [];
    }

    /**
     * Get array of sliders
     *
     * @return array
     */
    public function getSliderList()
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT s.id, s.title
                FROM slider AS s
                WHERE s.is_published = TRUE'
        ;

        return $dc->fetchAll($sql) ?: [];
    }
}
