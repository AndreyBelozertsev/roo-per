<?php

namespace Portal\HelperBundle\Repository;

/**
 * LogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LogRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Creates log message
     *
     * @param int $userId
     * @param int $timestamp
     * @param string $entityType
     * @param int $entityId
     * @param string $actionType
     * @param string $message
     * @param string $instanceCode
     *
     * @return bool
     */
    public function createMessage(
        $userId,
        $timestamp,
        $entityType,
        $entityId,
        $actionType,
        $message,
        $instanceCode)
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'INSERT INTO entity_log (user_id, created_at, entity_type, entity_id, action_type, ' .
            ' message, instance_code) ' .
            'VALUES (' .
            (is_null($userId) ? 'NULL' : $dc->quote($userId, \PDO::PARAM_INT)) . ', ' .
            $dc->quote($timestamp, \PDO::PARAM_STR) . ', ' .
            $dc->quote($entityType, \PDO::PARAM_STR) . ', ' .
            $dc->quote($entityId, \PDO::PARAM_INT) . ', ' .
            $dc->quote($actionType, \PDO::PARAM_STR) . ', ' .
            $dc->quote($message, \PDO::PARAM_STR) . ', '.
            $dc->quote($instanceCode, \PDO::PARAM_STR) . ' '
            . ')';

        $result = $dc->exec($sql);

        return $result > 0;
    }
    
    /**
     * @param integer $userId
     * @return array
     */
    public function getMessages($id, $instanceCode = 'main', $entityType = '')
    {
        $dc = $this->getEntityManager()->getConnection();
        $sql = 'SELECT concat(\'<span style="font-weight:bold;">\', CAST(created_at as TEXT), \'</span> - \', message) as message'
            . ' FROM entity_log'
            . ' WHERE entity_id = ' . (int)$id 
            . ' AND instance_code = \'' . $instanceCode . '\'' 
            . ' AND entity_type = \'' . $entityType . '\''
            . ' GROUP BY id'
            . ' ORDER BY id DESC'
            . ' LIMIT 10'
        ;

        return $dc->executeQuery($sql)->fetchAll(\PDO::FETCH_COLUMN);
    }
}
